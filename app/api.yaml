swagger: "2.0"
basePath: "/"

schemes:
  - http
  - https

definitions:
  ImageVis:
    type: string
    example:
      {
        "bands": ["red", "green", "blue"],
        "gamma": 2.0
      }
  MapId:
    type: string
    enum:
      - satellite
      - ndvi
      - legger
      - landuse
      - landuse-legger
      - landuse-vs-legger

  MapMode:
    type: string
    enum:
      - daily
      - yearly

  MapUri:
    properties:
      id:
        type: string
      token:
        type: string
    example:
      {
        "url": "https://earthengine.googleapis.com/map/03d64f27b85612c8f9992e05f110b8b5/{z}/{x}/{y}?token=4a7cd96a32cf56066e34fb155d40f284"
      }

  MapFilter:
    type: object
    required:
      - region
    example:
      {
        "dateBegin": "2016-07-20",
        "dateEnd": "2016-07-21",
        "vis": {
          "bands": ["red", "green", "blue"],
          "gamma": 2.0
        },
        "region": {
          "geodesic": true,
          "type": "Polygon",
          "coordinates": [[
            [5.846,51.984],
            [5.849,51.961],
            [5.910,51.960],
            [5.916,51.985],
            [5.877,51.990],
            [5.846,51.984]
          ]]
        },
        "scale": 500
      }
    properties:
      region:
        type: string
      dateBegin:
        type: string
        format: date-time
      dateEnd:
        type: string
        format: date-time
      vis:
        $ref: "#/definitions/ImageVis"
      scale:
        type: integer

  MapFilterType:
    type: object
    required:
      - region
    example:
      {
        "dateBegin": "2016-07-20",
        "dateEnd": "2016-07-21",
        "scale": 500,
        "assetType": "day",
        "region": {
          "type": "FeatureCollection",
          "features": [{
             "type": "Feature",
             "geometry": {
               "type": "Polygon",
               "coordinates": [
               [
               [5.846, 51.984],
               [5.849, 51.961],
               [5.910, 51.960],
               [5.916, 51.985],
               [5.877, 51.990],
               [5.846, 51.984]
               ]
               ]
             },
             "properties": {
               "id": 1
             }
           }]
        }
      }
    properties:
      region:
        type: string
      dateBegin:
        type: string
        format: date-time
      dateEnd:
        type: string
        format: date-time
      assetType:
        type: string
      scale:
        type: integer

info:
  description: Queries satellite images, spectral indices, and classifications from Google Earth Engine
  title: Vegetatie Monitor API
  version: "1.0.0"

paths:
  /map/{id}/:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      description: Returns image uri (map) processed by Google Earth Engine
      operationId: getMap
      parameters:
        - in: path
          name: id
          required: true
          default: 'satellite'
          schema:
            $ref: "#/definitions/MapId"
        - in: body
          name: body
          description: The filter for map request
          schema:
            $ref: "#/definitions/MapFilter"
      responses:
        200:
          description: Image tile url
          schema:
            "$ref": "#/definitions/MapUri"

  /map/{id}/zonal-info/:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      description: For a given region (feature collection) and start/end times, get zonal statistics
      operationId: getImageZonalInfo
      parameters:
        - in: path
          name: id
          required: true
          default: 'landuse'
          schema:
            $ref: "#/definitions/MapId"
        - in: body
          name: body
          description: The filter for map request
          schema:
              $ref: "#/definitions/MapFilterType"
      responses:
        200:
          description: Array of zonal statistics per feature or geometry
          examples: [
            {
              "id": "feature1",
              "area_per_type": [
              {
                "area": 10000.0,
                "type": "1"
              },
              {
                "area": 20000.0,
                "type": "2"
              },
              {
                "area": 30000.0,
                "type": "3"
              },
              {
                "area": 40000.0,
                "type": "4"
              },
              {
                "area": 50000.0,
                "type": "5"
              },
              {
                "area": 60000.0,
                "type": "6"
              }
              ]
            },
            {
              "id": "feature2",
              "area_per_type": [
              {
                "area": 100.0,
                "type": "1"
              },
              {
                "area": 200.0,
                "type": "2"
              },
              {
                "area": 300.0,
                "type": "3"
              },
              {
                "area": 400.0,
                "type": "4"
              },
              {
                "area": 500.0,
                "type": "5"
              },
              {
                "area": 600.0,
                "type": "6"
              }
              ]
            }
          ]
          schema:
            "$ref": "#/definitions/MapUri"

  /map/{id}/times/{mode}:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      description: For a given region and start/end times, ids and time stamps for all available images
      operationId: getImageTimes
      parameters:
        - in: path
          name: id
          required: true
          default: 'satellite'
          schema:
            $ref: "#/definitions/MapId"
        - in: path
          name: mode
          required: true
          default: 'daily'
          schema:
            $ref: "#/definitions/MapMode"
        - in: body
          name: body
          description: The filter for map request
          schema:
              $ref: "#/definitions/MapFilter"
      responses:
        200:
          description: Array of image times and image infos
          examples: [
            {
              "date": "2015-07-16",
              "dateFormat": "YYYY-MM-DD",
              "type": "instance"
            },
            {
              "date": "2015-09-11",
              "dateFormat": "YYYY-MM-DD",
              "type": "instance"
            },
            {
              "date": "2015-10-01",
              "dateFormat": "YYYY-MM-DD",
              "type": "instance"
            }
          ]
          schema:
            "$ref": "#/definitions/MapUri"

  /map/{id}/export/:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      description: For a given region, start/end times, and mode, export image as a GeoTIFF
      operationId: exportImage
      parameters:
        - in: path
          name: id
          required: true
          default: 'satellite'
          schema:
            $ref: "#/definitions/MapId"
        - in: body
          name: body
          description: The filter for map request
          schema:
              $ref: "#/definitions/MapFilter"
      responses:
        200:
          description: Exported image url
          content:
            text/plain:
              schema:
                type: string


  /image/:
    post:
      produces:
        - application/json
      description: Gets image by image id
      operationId: getImageById
      parameters:
        - in: query
          name: id
          required: true
          type: string
          example: COPERNICUS/S2/20160102T110129_20160102T144623_T31UGT
        - in: body
          name: vis
          required: false
          schema:
            $ref: "#/definitions/ImageVis"
      responses:
        200:
          description: Image tile url
          schema:
            "$ref": "#/definitions/MapUri"

  /get_times_by_tiles/:
    post:
      produces:
        - application/json
      description: Gets image by XYZ tiles
      operationId: getTimesByTiles
      parameters:
        - in: body
          name: tile_ids
          required: true
      responses:
        200:
          description: array or times
